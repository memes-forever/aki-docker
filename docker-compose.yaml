---
version: '3.8'

x-spt-common:
  &spt-common
  image: node:16.17.1-buster
  working_dir: /home/node/app
  user: node
#  image: spt_node
#  build:
#    context: .
#    dockerfile: ./spt-docker/Dockerfile
#    args:
#      NODE_IMAGE_NAME: node:16.17.1-buster
  entrypoint: bash
  volumes:
    # files
    - ./app/package.json:/home/node/app/package.json
    - ./app/tsconfig.json:/home/node/app/tsconfig.json
    - ./app/base_tsconfig.json:/home/node/app/base_tsconfig.json
    - ./app/.parcelrc:/home/node/app/.parcelrc
    - ./.config:/home/node/app/.config
    # folders
    - ./app/Aki_Data:/home/node/app/Aki_Data
    - ./app/src:/home/node/app/obj
    - ./app/src:/home/node/app/src
    - ./app/node_modules:/home/node/app/node_modules
    - ./app/user:/home/node/app/user

services:
  init:
    <<: *spt-common
    command:
      - -c
      - |
        echo
        echo "Init" 
        yarn
        echo "Finish init"

  run:
    <<: *spt-common
    command:
      - -c
      - |
        echo
        echo
        echo "Get config"
        . ./.config
        echo "Prepare run ..."
        stringContain() { case $$2 in *$$1* ) return 0;; *) return 1;; esac ;}
        echo "Fix mods files ..."
        for i in $$( find ./user/mods -name "*.js" ); do
          if ! stringContain "node_modules" "$${i}"; then
            if grep -q "$$REPLACEMENT_WORK_DIR" $${i}; then
              echo $${i}
              sed -i "s@$$REPLACEMENT_WORK_DIR@$$CURRENT_WORK_DIR@g" $${i}
            fi
          fi
        done
        echo "Change ip on $$INTERNAL_IP in /Aki_Data/Server/configs/http.json"
        echo "Change ip on $$EXTERNAL_IP in /user/mods/SITCoop/config/coopConfig.json"
        sed -i -e "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$$INTERNAL_IP/g" ./Aki_Data/Server/configs/http.json
        sed -i -e "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$$EXTERNAL_IP/g" ./user/mods/SITCoop/config/coopConfig.json
        echo
        echo "Start server, please wait ..."
        echo
        npx ts-node -r tsconfig-paths/register src/ide/ReleaseEntry.ts
    ports:
      - "6969:6969"
      - "6970:6970"
    healthcheck:
      test: curl --fail http://localhost:6969/healthcheck
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 60s
    restart: always
    labels:
      - "autoheal=true"
    depends_on:
      init:
        condition: service_completed_successfully

  autoheal:
    image: willfarrell/autoheal:latest
    tty: true
    restart: always
    environment:
      - AUTOHEAL_INTERVAL=60
      - AUTOHEAL_START_PERIOD=300
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      init:
        condition: service_completed_successfully
